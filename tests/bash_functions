pack () 
{ 
    perl -e 'print join "", map { pack "s", $_ } <>' "$@"
}

unpack () 
{ 
    perl -le 'local $/; print for map { unpack "s" } map { /\G(..)/gms } <>' "$@"
}

function notch ()
{
    local notch_freq=${1?"Supply a notch frequency"}
    local nyquist=$(( ${2:-8000} / 2 ))
    local notch_width=${3:-100}

    octave-cli --eval "pkg load signal; [b,a]=pei_tseng_notch($notch_freq/$nyquist,$notch_width/$nyquist); disp([b a])"
}

function invert () { sox "$@" vol -1; }

function pass_freq ()
{
    local freq=$1
    shift
    local filter=${FILTER:-'sox $1 -t raw -e signed -r 8000 -b 16 - biquad'}
    local post_filter=${POST_FILTER:-cat}
    sox -m <(eval $filter $(notch $freq) | $post_filter | invert -t raw -e signed -r 8000 -b 16 - -p) "$@"
}

